<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gys.mapper.GaiaStoreOutSuggestionHMapper">
  <resultMap id="BaseResultMap" type="com.gys.entity.GaiaStoreOutSuggestionH">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="CLIENT" jdbcType="VARCHAR" property="client" />
    <result column="STO_CODE" jdbcType="VARCHAR" property="stoCode" />
    <result column="STO_NAME" jdbcType="VARCHAR" property="stoName" />
    <result column="BILL_CODE" jdbcType="VARCHAR" property="billCode" />
    <result column="BILL_DATE" jdbcType="TIMESTAMP" property="billDate" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="INVALID_DATE" jdbcType="TIMESTAMP" property="invalidDate" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="ITEMS_QTY" jdbcType="INTEGER" property="itemsQty" />
    <result column="FINISH_TIME" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="IS_DELETE" jdbcType="INTEGER" property="isDelete" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="export_before_confirm" jdbcType="INTEGER" property="exportBeforeConfirm" />
    <result column="export_after_confirm" jdbcType="INTEGER" property="exportAfterConfirm" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, CLIENT, STO_CODE, STO_NAME, BILL_CODE, BILL_DATE, `TYPE`, INVALID_DATE, `STATUS`,
    ITEMS_QTY, FINISH_TIME, IS_DELETE, CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER,
    export_before_confirm, export_after_confirm
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from GAIA_STORE_OUT_SUGGESTION_H
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from GAIA_STORE_OUT_SUGGESTION_H
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="com.gys.entity.GaiaStoreOutSuggestionH" useGeneratedKeys="true">
    insert into GAIA_STORE_OUT_SUGGESTION_H (CLIENT, STO_CODE, STO_NAME,
                                             BILL_CODE, BILL_DATE, `TYPE`,
                                             INVALID_DATE, `STATUS`, ITEMS_QTY,
                                             FINISH_TIME, IS_DELETE, CREATE_TIME,
                                             CREATE_USER, UPDATE_TIME, UPDATE_USER,
                                             export_before_confirm, export_after_confirm
    )
    values (#{client,jdbcType=VARCHAR}, #{stoCode,jdbcType=VARCHAR}, #{stoName,jdbcType=VARCHAR},
            #{billCode,jdbcType=VARCHAR}, #{billDate,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR},
            #{invalidDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{itemsQty,jdbcType=INTEGER},
            #{finishTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
            #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR},
            #{exportBeforeConfirm,jdbcType=INTEGER}, #{exportAfterConfirm,jdbcType=INTEGER}
           )
  </insert>
  <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.gys.entity.GaiaStoreOutSuggestionH" useGeneratedKeys="true">
    insert into GAIA_STORE_OUT_SUGGESTION_H
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="client != null">
        CLIENT,
      </if>
      <if test="stoCode != null">
        STO_CODE,
      </if>
      <if test="stoName != null">
        STO_NAME,
      </if>
      <if test="billCode != null">
        BILL_CODE,
      </if>
      <if test="billDate != null">
        BILL_DATE,
      </if>
      <if test="type != null">
        `TYPE`,
      </if>
      <if test="invalidDate != null">
        INVALID_DATE,
      </if>
      <if test="status != null">
        `STATUS`,
      </if>
      <if test="itemsQty != null">
        ITEMS_QTY,
      </if>
      <if test="finishTime != null">
        FINISH_TIME,
      </if>
      <if test="isDelete != null">
        IS_DELETE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="exportBeforeConfirm != null">
        export_before_confirm,
      </if>
      <if test="exportAfterConfirm != null">
        export_after_confirm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="client != null">
        #{client,jdbcType=VARCHAR},
      </if>
      <if test="stoCode != null">
        #{stoCode,jdbcType=VARCHAR},
      </if>
      <if test="stoName != null">
        #{stoName,jdbcType=VARCHAR},
      </if>
      <if test="billCode != null">
        #{billCode,jdbcType=VARCHAR},
      </if>
      <if test="billDate != null">
        #{billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="invalidDate != null">
        #{invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="itemsQty != null">
        #{itemsQty,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="exportBeforeConfirm != null">
        #{exportBeforeConfirm,jdbcType=INTEGER},
      </if>
      <if test="exportAfterConfirm != null">
        #{exportAfterConfirm,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gys.entity.GaiaStoreOutSuggestionH">
    update GAIA_STORE_OUT_SUGGESTION_H
    <set>
      <if test="client != null">
        CLIENT = #{client,jdbcType=VARCHAR},
      </if>
      <if test="stoCode != null">
        STO_CODE = #{stoCode,jdbcType=VARCHAR},
      </if>
      <if test="stoName != null">
        STO_NAME = #{stoName,jdbcType=VARCHAR},
      </if>
      <if test="billCode != null">
        BILL_CODE = #{billCode,jdbcType=VARCHAR},
      </if>
      <if test="billDate != null">
        BILL_DATE = #{billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        `TYPE` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="invalidDate != null">
        INVALID_DATE = #{invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `STATUS` = #{status,jdbcType=INTEGER},
      </if>
      <if test="itemsQty != null">
        ITEMS_QTY = #{itemsQty,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null">
        FINISH_TIME = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        IS_DELETE = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="exportBeforeConfirm != null">
        export_before_confirm = #{exportBeforeConfirm,jdbcType=INTEGER},
      </if>
      <if test="exportAfterConfirm != null">
        export_after_confirm = #{exportAfterConfirm,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gys.entity.GaiaStoreOutSuggestionH">
    update GAIA_STORE_OUT_SUGGESTION_H
    set CLIENT = #{client,jdbcType=VARCHAR},
        STO_CODE = #{stoCode,jdbcType=VARCHAR},
        STO_NAME = #{stoName,jdbcType=VARCHAR},
        BILL_CODE = #{billCode,jdbcType=VARCHAR},
        BILL_DATE = #{billDate,jdbcType=TIMESTAMP},
        `TYPE` = #{type,jdbcType=VARCHAR},
        INVALID_DATE = #{invalidDate,jdbcType=TIMESTAMP},
        `STATUS` = #{status,jdbcType=INTEGER},
        ITEMS_QTY = #{itemsQty,jdbcType=INTEGER},
        FINISH_TIME = #{finishTime,jdbcType=TIMESTAMP},
        IS_DELETE = #{isDelete,jdbcType=INTEGER},
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
        export_before_confirm = #{exportBeforeConfirm,jdbcType=INTEGER},
        export_after_confirm = #{exportAfterConfirm,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <select id="getSuggestions" parameterType="com.gys.entity.data.suggestion.dto.QueryAdjustmentDto" resultType="com.gys.entity.data.suggestion.vo.AdjustmentBaseInfo">
    SELECT
    DATE_FORMAT(sh.BILL_DATE,'%Y/%m/%e') date,
    sh.CLIENT clientId,
    ga.AREA_NAME provinceName,
    ga2.AREA_NAME cityName,
    gf.FRANC_NAME  clientName,
    sh.BILL_CODE billCode,
    sh.ITEMS_QTY outItemsNumber,
    ish.OUT_STO_CODE  outStoCode,
    ish.STO_CODE inStoCode,
    ish.BILL_CODE inBillCode,
    sh.`STATUS`  outBillStatus,
    ish.`STATUS` inBillStatus,
    sh.export_before_confirm outExportBeforeConfirm,
    sh.export_after_confirm outExportAfterConfirm,
    IFNULL(ish.export_before_confirm,0 ) inExportBeforeConfirm,
    IFNULL(ish.export_after_confirm ,0)inExportAfterConfirm
    FROM
    GAIA_STORE_OUT_SUGGESTION_H sh
    LEFT JOIN GAIA_FRANCHISEE gf ON gf.CLIENT = sh.CLIENT
    LEFT JOIN GAIA_AREA ga ON ga.AREA_ID = gf.FRANC_PROV
    LEFT JOIN GAIA_AREA ga2 ON ga2.AREA_ID = gf.FRANC_CITY
    LEFT JOIN GAIA_STORE_IN_SUGGESTION_H ish on ish.CLIENT=sh.CLIENT AND ish.OUT_BILL_CODE=sh.BILL_CODE
    <where>
      <if test="clientIds != null and clientIds.size > 0">
        and  sh.CLIENT  in
        <foreach collection="clientIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="provinceIds != null and provinceIds.size > 0">
        and    ga.AREA_ID  in
        <foreach collection="provinceIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="cityIds != null and cityIds.size > 0">
        and  ga2.AREA_ID  in
        <foreach collection="cityIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>

      <if test="beginDate != null ">
        and  sh.BILL_DATE &gt;=#{beginDate}
      </if>
      <if test="endDate != null ">
        and  sh.BILL_DATE &lt;=#{endDate}
      </if>
    </where>
      order by sh.BILL_DATE DESC
  </select>

  <select id="queryActualItem"  resultType="com.gys.entity.data.suggestion.vo.ActualItemVo">
    SELECT
    CLIENT client,
    BILL_CODE inBillCode,
    DATE_FORMAT(CREATE_TIME,'%Y%m%d') date,
    OUT_BILL_CODE outBillCode,
    count( 1 ) number
    FROM
    (
    SELECT
    sh.CREATE_TIME,
    sh.BILL_CODE,
    sh.OUT_BILL_CODE,
    sh.CLIENT
    FROM
    GAIA_STORE_IN_SUGGESTION_H sh
    LEFT JOIN GAIA_STORE_IN_SUGGESTION_D sd ON sh.CLIENT = sd.CLIENT
    AND sd.CREATE_TIME = sh.BILL_DATE
    AND sh.BILL_CODE = sd.BILL_CODE
    AND sh.`STATUS` = 3
    AND sd.FINAL_QTY >0
    <where>
      <if test="clientids != null and clientids.size > 0">
        and  sh.CLIENT  in
        <foreach collection="clientids" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="inBillCodes != null and inBillCodes.size > 0">
        and    sd.BILL_CODE  in
        <foreach collection="inBillCodes" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
    GROUP BY sh.CLIENT,sd.BILL_CODE,sd.PRO_SELF_CODE
    ) a  GROUP BY CLIENT,BILL_CODE
  </select>

  <select id="getWeekSuggestions" parameterType="com.gys.entity.data.suggestion.dto.QueryAdjustmentDto" resultType="com.gys.entity.data.suggestion.vo.AdjustmentBaseInfo">
    SELECT
    DATE_FORMAT(sh.BILL_DATE,'%Y%m%d') date,
    sh.CLIENT clientId,
    ga.AREA_NAME provinceName,
    ga2.AREA_NAME cityName,
    gf.FRANC_NAME  clientName,
    sh.BILL_CODE billCode,
    sh.ITEMS_QTY outItemsNumber,
    ish.OUT_STO_CODE  outStoCode,
    ish.STO_CODE inStoCode,
    ish.BILL_CODE inBillCode,
    sh.`STATUS`  outBillStatus,
    ish.`STATUS` inBillStatus,
    sh.export_before_confirm outExportBeforeConfirm,
    sh.export_after_confirm outExportAfterConfirm,
    IFNULL(ish.export_before_confirm,0)  inExportBeforeConfirm,
    IFNULL(ish.export_after_confirm,0) inExportAfterConfirm
    FROM
    GAIA_STORE_OUT_SUGGESTION_H sh
    LEFT JOIN GAIA_FRANCHISEE gf ON gf.CLIENT = sh.CLIENT
    LEFT JOIN GAIA_AREA ga ON ga.AREA_ID = gf.FRANC_PROV
    LEFT JOIN GAIA_AREA ga2 ON ga2.AREA_ID = gf.FRANC_CITY
    LEFT JOIN GAIA_STORE_IN_SUGGESTION_H ish on ish.CLIENT=sh.CLIENT AND ish.OUT_BILL_CODE=sh.BILL_CODE
    <where>
      <if test="clientIds != null and clientIds.size > 0">
        and  sh.CLIENT  in
        <foreach collection="clientIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="provinceIds != null and provinceIds.size > 0">
        and    ga.AREA_ID  in
        <foreach collection="provinceIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="cityIds != null and cityIds.size > 0">
        and  ga2.AREA_ID  in
        <foreach collection="cityIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>

      <if test="beginDate != null ">
        and  sh.BILL_DATE &gt;=#{beginDate}
      </if>
      <if test="endDate != null ">
        and  sh.BILL_DATE &lt;=#{endDate}
      </if>
    </where>
    order by sh.BILL_DATE DESC
  </select>

  <select id="queryWeekActualItem"  resultType="com.gys.entity.data.suggestion.vo.ActualItemVo">
    SELECT
    CLIENT client,
    BILL_CODE inBillCode,
    DATE_FORMAT(CREATE_TIME,'%Y%m%d') date,
    OUT_BILL_CODE outBillCode,
    count( 1 ) number
    FROM
    (
    SELECT
    sh.CREATE_TIME,
    sh.BILL_CODE,
    sh.OUT_BILL_CODE,
    sh.CLIENT
    FROM
    GAIA_STORE_IN_SUGGESTION_H sh
    LEFT JOIN GAIA_STORE_IN_SUGGESTION_D sd ON sh.CLIENT = sd.CLIENT
    AND sd.CREATE_TIME = sh.BILL_DATE
    AND sh.BILL_CODE = sd.BILL_CODE
    AND sh.`STATUS` = 3
    AND sd.FINAL_QTY >= 1
    <where>
      <if test="clientids != null and clientids.size > 0">
        and  sh.CLIENT  in
        <foreach collection="clientids" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="inBillCodes != null and inBillCodes.size > 0">
        and    sd.BILL_CODE  in
        <foreach collection="inBillCodes" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
    GROUP BY sh.CLIENT, sd.BILL_CODE,sd.PRO_SELF_CODE
    ) a  GROUP BY CLIENT,BILL_CODE
  </select>

  <select id="getMonthSuggestions" parameterType="com.gys.entity.data.suggestion.dto.QueryAdjustmentDto" resultType="com.gys.entity.data.suggestion.vo.AdjustmentBaseInfo">
    SELECT
    DATE_FORMAT(sh.BILL_DATE,'%Y%m%d') date,
    sh.CLIENT clientId,
    ga.AREA_NAME provinceName,
    ga2.AREA_NAME cityName,
    gf.FRANC_NAME  clientName,
    sh.BILL_CODE billCode,
    sh.ITEMS_QTY outItemsNumber,
    ish.OUT_STO_CODE  outStoCode,
    ish.STO_CODE inStoCode,
    ish.BILL_CODE inBillCode,
    sh.`STATUS`  outBillStatus,
    ish.`STATUS` inBillStatus,
    sh.export_before_confirm outExportBeforeConfirm,
    sh.export_after_confirm outExportAfterConfirm,
    IFNULL(ish.export_before_confirm,0) inExportBeforeConfirm,
    IFNULL(ish.export_after_confirm,0) inExportAfterConfirm
    FROM
    GAIA_STORE_OUT_SUGGESTION_H sh
    LEFT JOIN GAIA_FRANCHISEE gf ON gf.CLIENT = sh.CLIENT
    LEFT JOIN GAIA_AREA ga ON ga.AREA_ID = gf.FRANC_PROV
    LEFT JOIN GAIA_AREA ga2 ON ga2.AREA_ID = gf.FRANC_CITY
    LEFT JOIN GAIA_STORE_IN_SUGGESTION_H ish on ish.CLIENT=sh.CLIENT AND ish.OUT_BILL_CODE=sh.BILL_CODE
    <where>
      <if test="clientIds != null and clientIds.size > 0">
        and  sh.CLIENT  in
        <foreach collection="clientIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="provinceIds != null and provinceIds.size > 0">
        and    ga.AREA_ID  in
        <foreach collection="provinceIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="cityIds != null and cityIds.size > 0">
        and  ga2.AREA_ID  in
        <foreach collection="cityIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>

      <if test="beginDate != null ">
        and  sh.BILL_DATE &gt;=#{beginDate}
      </if>
      <if test="endDate != null ">
        and  sh.BILL_DATE &lt;=#{endDate}
      </if>
    </where>
    order by sh.BILL_DATE DESC
  </select>

  <select id="queryMonthActualItem"  resultType="com.gys.entity.data.suggestion.vo.ActualItemVo">
    SELECT
    CLIENT client,
    BILL_CODE inBillCode,
    DATE_FORMAT(CREATE_TIME,'%Y%m%d') date,
    OUT_BILL_CODE outBillCode,
    count( 1 ) number
    FROM
    (
    SELECT
    sh.CREATE_TIME,
    sh.BILL_CODE,
    sh.OUT_BILL_CODE,
    sh.CLIENT
    FROM
    GAIA_STORE_IN_SUGGESTION_H sh
    LEFT JOIN GAIA_STORE_IN_SUGGESTION_D sd ON sh.CLIENT = sd.CLIENT
    AND sd.CREATE_TIME = sh.BILL_DATE
    AND sh.BILL_CODE = sd.BILL_CODE
    AND sh.`STATUS` = 3
    AND sd.FINAL_QTY >= 1
    <where>
      <if test="clientids != null and clientids.size > 0">
        and  sh.CLIENT  in
        <foreach collection="clientids" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="inBillCodes != null and inBillCodes.size > 0">
        and    sd.BILL_CODE  in
        <foreach collection="inBillCodes" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
    GROUP BY sh.CLIENT,sd.BILL_CODE,sd.PRO_SELF_CODE
    ) a  GROUP BY CLIENT,BILL_CODE
  </select>

  <select id="getOne" parameterType="com.gys.entity.data.suggestion.dto.UpdateExportDto" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from GAIA_STORE_OUT_SUGGESTION_H
    <where>
      <if test="clientId!=null and clientId!='' ">
        and  CLIENT=#{clientId}
      </if>
      <if test="storeId!=null and storeId!='' ">
        and STO_CODE=#{storeId}
      </if>
      <if test="id!=null and id!='' ">
        and BILL_CODE=#{id}
      </if>
    </where>
     limit 1
  </select>

  <select id="getDateWeek"  resultType="com.gys.entity.data.suggestion.vo.CalendarVo">
    select
    GCD_DATE  gcdDate,
    GCD_YEAR gcdYear,
    GCD_MONTH gcdMonth,
    GCD_WEEK gcdWeek
    from GAIA_CAL_DT
    <where>
      <if test="collect != null and collect.size > 0">
         GCD_DATE  in
        <foreach collection="collect" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
  </select>


  <select id="getOriginalSuggestions" parameterType="com.gys.entity.data.suggestion.dto.QueryAdjustmentDto" resultType="com.gys.entity.data.suggestion.vo.AdjustmentBaseInfo">
    SELECT
    DATE_FORMAT(sh.BILL_DATE,'%Y/%m/%e') date,
    sh.CLIENT clientId,
    ga.AREA_NAME provinceName,
    ga2.AREA_NAME cityName,
    gf.FRANC_NAME  clientName,
    sh.BILL_CODE billCode,
    sh.ITEMS_QTY outItemsNumber,
    sh.`STATUS`  outBillStatus,
    sh.export_before_confirm outExportBeforeConfirm,
    sh.export_after_confirm outExportAfterConfirm
    FROM
    GAIA_STORE_OUT_SUGGESTION_H sh
    LEFT JOIN GAIA_FRANCHISEE gf ON gf.CLIENT = sh.CLIENT
    LEFT JOIN GAIA_AREA ga ON ga.AREA_ID = gf.FRANC_PROV
    LEFT JOIN GAIA_AREA ga2 ON ga2.AREA_ID = gf.FRANC_CITY
    <where>
      <if test="clientIds != null and clientIds.size > 0">
        and  sh.CLIENT  in
        <foreach collection="clientIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="provinceIds != null and provinceIds.size > 0">
        and    ga.AREA_ID  in
        <foreach collection="provinceIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="cityIds != null and cityIds.size > 0">
        and  ga2.AREA_ID  in
        <foreach collection="cityIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>

      <if test="beginDate != null ">
        and  sh.BILL_DATE &gt;=#{beginDate}
      </if>
      <if test="endDate != null ">
        and  sh.BILL_DATE &lt;=#{endDate}
      </if>
    </where>
    GROUP BY sh.CLIENT,sh.BILL_DATE,sh.BILL_CODE
    order by sh.BILL_DATE DESC
  </select>

  <select id="getSuggestionsAll" resultType="com.gys.entity.data.suggestion.vo.AdjustmentBaseInfo">
    SELECT
    DATE_FORMAT(sh.BILL_DATE,'%Y%m%d') date,
    sh.CLIENT clientId,
    ga.AREA_NAME provinceName,
    ga2.AREA_NAME cityName,
    gf.FRANC_NAME  clientName,
    sh.BILL_CODE billCode,
    sh.ITEMS_QTY outItemsNumber,
    ish.OUT_STO_CODE  outStoCode,
    ish.STO_CODE inStoCode,
    ish.BILL_CODE inBillCode,
    sh.`STATUS`  outBillStatus,
    ish.`STATUS` inBillStatus,
    sh.export_before_confirm outExportBeforeConfirm,
    sh.export_after_confirm outExportAfterConfirm,
    IFNULL(ish.export_before_confirm,0 ) inExportBeforeConfirm,
    IFNULL(ish.export_after_confirm ,0)inExportAfterConfirm
    FROM
    GAIA_STORE_OUT_SUGGESTION_H sh
    LEFT JOIN GAIA_FRANCHISEE gf ON gf.CLIENT = sh.CLIENT
    LEFT JOIN GAIA_AREA ga ON ga.AREA_ID = gf.FRANC_PROV
    LEFT JOIN GAIA_AREA ga2 ON ga2.AREA_ID = gf.FRANC_CITY
    LEFT JOIN GAIA_STORE_IN_SUGGESTION_H ish on ish.CLIENT=sh.CLIENT AND ish.OUT_BILL_CODE=sh.BILL_CODE
    <where>
      <if test="clientIds != null and clientIds.size > 0">
        and  sh.CLIENT  in
        <foreach collection="clientIds" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="codes != null and codes.size > 0">
        and     sh.BILL_CODE  in
        <foreach collection="codes" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
    order by sh.BILL_DATE DESC
  </select>
</mapper>